        // Enhanced updateLoadingProgress function
        function updateLoadingProgress(message, percentage) {
            const loadingText = document.querySelector('.loading-text');
            const progressBar = document.querySelector('.progress-bar');
            const progressText = document.querySelector('.progress-text');
            
            if (loadingText) loadingText.textContent = message;
            if (progressBar) progressBar.style.width = percentage + '%';
            if (progressText) progressText.textContent = message;
            
            console.log(`üì± Loading: ${message} (${percentage}%)`);
        }

        // ASYNC: Main initialization function with detailed progress tracking
        async function initSmartCity() {
            try {
                // ƒê·∫£m b·∫£o THREE.js loaded
                updateLoadingProgress('ƒêang t·∫£i THREE.js...', 10);
                await ensureThreeJSLoaded();
                console.log('THREE.js loaded successfully:', THREE.REVISION);
                updateLoadingProgress('THREE.js ƒë√£ t·∫£i th√†nh c√¥ng!', 20);
                
                // B√¢y gi·ªù m·ªõi kh·ªüi t·∫°o scene
                updateLoadingProgress('Kh·ªüi t·∫°o scene 3D...', 25);
                initScene();
                
                updateLoadingProgress('Kh·ªüi t·∫°o WebGL renderer...', 30);
                await initRenderer();
                
                updateLoadingProgress('Thi·∫øt l·∫≠p camera...', 35);
                initCamera();
                
                updateLoadingProgress('T·∫°o h·ªá th·ªëng √°nh s√°ng...', 40);
                initLights();
                
                updateLoadingProgress('X√¢y d·ª±ng t√≤a nh√†...', 50);
                createBuildings();
                
                updateLoadingProgress('T·∫°o ƒë·ªãa h√¨nh v√† c∆° s·ªü h·∫° t·∫ßng...', 60);
                createTerrain();
                
                updateLoadingProgress('Kh·ªüi ƒë·ªông h·ªá th·ªëng render...', 90);
                // Start render loop
                animate();
                
                updateLoadingProgress('Ho√†n t·∫•t kh·ªüi t·∫°o...', 95);
                // Hide loading screen
                hideLoadingScreen();
                
            } catch (error) {
                console.error('Initialization failed:', error);
                showErrorMessage('Failed to initialize 3D Smart City: ' + error.message);
            }
        }